from aiogram import Router
from aiogram.types import Message
from aiogram.fsm.context import FSMContext
from aiogram.filters.command import Command
from aiogram.methods import SendMessage
from aiogram.enums.parse_mode import ParseMode

from stage import Stage

from utils.id import get_id
from utils.execute_method import execute_method


INFO: str = """
***–ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –±–æ—Ç?***
–°–Ω–∞—á–∞–ª–∞ —Ç—ã –æ—Ç–≤–µ—á–∞–µ—à—å –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–æ–ø—Ä–æ—Å–æ–≤\\, –∞ –∑–∞—Ç–µ–º –±–æ—Ç –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç —Ç–µ–±–µ –∞–Ω–∫–µ—Ç—ã –¥—Ä—É–≥–∏—Ö –ª—é–¥–µ–π\\, –æ–ø–∏—Ä–∞—è—Å—å –Ω–∞ —Ç–≤–æ–∏ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è\\. –ö–∞–∂–¥–æ–π –∞–Ω–∫–µ—Ç–µ –º–æ–∂–Ω–æ –ø–æ—Å—Ç–∞–≤–∏—Ç—å –ª–∞–π–∫ \\(üëç\\) –ª–∏–±–æ –¥–∏–∑–ª–∞–π–∫ \\(üëé\\)\\. –ö–æ–≥–¥–∞ —É –¥–≤—É—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å–ª—É—á–∞–µ—Ç—Å—è –≤–∑–∞–∏–º–Ω—ã–π –ª–∞–π–∫\\, –±–æ—Ç –ø—Ä–∏—Å—ã–ª–∞–µ—Ç –æ–±–æ–∏–º –∞–∫–∫–∞—É–Ω—Ç –ø–∞—Ä—Ç–Ω–µ—Ä–∞\\, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –æ–±—â–µ–Ω–∏–µ –≤ –ª–∏—á–Ω–æ–π –ø–µ—Ä–µ–ø–∏—Å–∫–µ\\.

–ü—Ä–∏ –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏–∏ –∫–∞–∫–æ–π\\-–ª–∏–±–æ –æ—à–∏–±–∫–∏ —Å–ª–µ–¥—É–µ—Ç –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å –±–æ—Ç–∞ –∫–æ–º–∞–Ω–¥–æ–π /start\\. –ï—Å–ª–∏ –ø–æ—Å–ª–µ —ç—Ç–æ–≥–æ –æ—à–∏–±–∫–∞ –æ—Å—Ç–∞–ª–∞—Å—å\\, —Å–ª–µ–¥—É–µ—Ç –Ω–∞–ø–∏—Å–∞—Ç—å –≤ [—Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫—É](tg://user?id=6434294262)\\.

***–ü—Ä–∞–≤–∏–ª–∞***
‚Ä¢ –ó–∞–ø—Ä–µ—â–µ–Ω–∞ –Ω–µ—Ü–µ–Ω–∑—É—Ä–Ω–∞—è —Ä–µ—á—å –≤ –ª—é–±–æ–º –≤–∏–¥–µ\\.
‚Ä¢ –ü—Ä–∏–Ω–∏–º–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ —Ä–µ–∞–ª—å–Ω—ã–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –±–µ–∑ –ø–æ—Å—Ç–æ—Ä–æ–Ω–Ω–∏—Ö –ª—é–¥–µ–π\\.
"""


class InfoStage(Stage):
    name: str = "info"
    description: str = "–û –±–æ—Ç–µ"

    @staticmethod
    async def prepare(state: FSMContext):
        pass

    @staticmethod
    async def process(message: Message, state: FSMContext):
        """Send info to user"""
        return await execute_method(
            SendMessage(
                chat_id=message.from_user.id,
                text=INFO,
                parse_mode=ParseMode.MARKDOWN_V2,
            )
        )

    @staticmethod
    def register(router: Router):
        router.message.register(
            InfoStage.process,
            Command(InfoStage.name),
        )
